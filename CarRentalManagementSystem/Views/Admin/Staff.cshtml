@model IEnumerable<CarRentalManagementSystem.DTOs.StaffResponseDTO>
@{
    ViewData["Title"] = "Staff Management";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="row">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2><i class="fas fa-user-tie me-2"></i>Staff Management</h2>
            <button class="btn btn-primary" onclick="addNewStaff()">
                <i class="fas fa-plus me-1"></i>Add New Staff
            </button>
        </div>
        
        @if (Model.Any())
        {
            <div class="card shadow-sm">
                <div class="card-body p-3">
                    <div class="table-responsive">
                        <table class="table table-hover align-middle table-striped table-sm">
                            <thead class="table-primary" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; font-weight: 600;">
                                <tr style="text-align: center;">
                                    <th scope="col" style="width: 8%; padding: 10px 6px; font-size: 0.8rem;">ID</th>
                                    <th scope="col" style="width: 20%; padding: 10px 6px; font-size: 0.8rem;">Full Name</th>
                                    <th scope="col" style="width: 12%; padding: 10px 6px; font-size: 0.8rem;">Username</th>
                                    <th scope="col" style="width: 22%; padding: 10px 6px; font-size: 0.8rem;">Email</th>
                                    <th scope="col" style="width: 12%; padding: 10px 6px; font-size: 0.8rem;">Phone</th>
                                    <th scope="col" style="width: 8%; padding: 10px 6px; font-size: 0.8rem;">Role</th>
                                    <th scope="col" style="width: 10%; padding: 10px 6px; font-size: 0.8rem;">Joined</th>
                                    <th scope="col" style="width: 8%; padding: 10px 6px; font-size: 0.8rem;">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var staff in Model)
                                {
                                    <tr style="vertical-align: middle;">
                                        <td class="text-center"><strong class="text-primary">#@staff.StaffID</strong></td>
                                        <td class="text-center">
                                            <div class="d-flex align-items-center justify-content-center">
                                                @if (!string.IsNullOrEmpty(staff.ImageUrl))
                                                {
                                                    <img src="@staff.ImageUrl" alt="avatar" class="rounded-circle me-2" style="width:28px;height:28px;object-fit:cover; border: 2px solid #e3f2fd;" />
                                                }
                                                else
                                                {
                                                    <div class="bg-gradient-primary rounded-circle me-2 d-flex align-items-center justify-content-center" style="width:28px;height:28px; background: linear-gradient(45deg, #2196F3, #21CBF3);">
                                                        <i class="fas fa-user-tie text-white" style="font-size:12px;"></i>
                                                    </div>
                                                }
                                                <span class="fw-medium">@staff.FullName</span>
                                            </div>
                                        </td>
                                        <td class="text-center"><span class="text-muted">@staff.Username</span></td>
                                        <td class="text-center"><span class="text-info fw-medium">@staff.Email</span></td>
                                        <td class="text-center">
                                            @if (string.IsNullOrEmpty(staff.PhoneNo))
                                            {
                                                <span class="text-muted">Not provided</span>
                                            }
                                            else
                                            {
                                                <span class="fw-medium">@staff.PhoneNo</span>
                                            }
                                        </td>
                                        <td class="text-center">
                                            <span class="badge fs-6 px-3 py-2 @(staff.Role == "Admin" ? "bg-danger" : "bg-success")" style="border-radius: 20px;">
                                                @staff.Role
                                            </span>
                                        </td>
                                        <td class="text-center"><span class="text-secondary">@staff.CreatedAt.ToString("MMM dd, yyyy")</span></td>
                                        <td class="text-center">
                                            <div class="btn-group" role="group">
                                                <button class="btn btn-sm btn-outline-primary" onclick="editStaff(@staff.StaffID)" style="border-radius: 20px 0 0 20px;">
                                                    <i class="fas fa-edit"></i> Edit
                                                </button>
                                                @if (staff.Role != "Admin")
                                                {
                                                    <button class="btn btn-sm btn-outline-danger" onclick="deleteStaff(@staff.StaffID)" style="border-radius: 0 20px 20px 0;">
                                                        <i class="fas fa-trash"></i> Delete
                                                    </button>
                                                }
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-user-tie fa-3x text-muted mb-3"></i>
                <h4 class="text-muted">No staff members found</h4>
                <p class="text-muted">No staff members have been added yet.</p>
                <button class="btn btn-primary" onclick="addNewStaff()">
                    <i class="fas fa-plus me-1"></i>Add First Staff Member
                </button>
            </div>
        }
    </div>
</div>

<!-- Staff Registration Modal -->
<div class="modal fade" id="staffModal" tabindex="-1" aria-labelledby="staffModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staffModalLabel">
                    <i class="fas fa-user-plus me-2"></i>Add New Staff Member
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="staffForm">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="firstName" class="form-label">
                                    <i class="fas fa-user me-1"></i>First Name *
                                </label>
                                <input type="text" class="form-control" id="firstName" name="firstName" required>
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="lastName" class="form-label">
                                    <i class="fas fa-user me-1"></i>Last Name *
                                </label>
                                <input type="text" class="form-control" id="lastName" name="lastName" required>
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="email" class="form-label">
                                    <i class="fas fa-envelope me-1"></i>Email Address *
                                </label>
                                <input type="email" class="form-control" id="email" name="email" required>
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="phoneNumber" class="form-label">
                                    <i class="fas fa-phone me-1"></i>Phone Number *
                                </label>
                                <input type="tel" class="form-control" id="phoneNumber" name="phoneNumber" required>
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="role" class="form-label">
                                    <i class="fas fa-user-tag me-1"></i>Role
                                </label>
                                <input type="text" class="form-control" id="role" name="role" value="Staff" readonly>
                            </div>
                        </div>
                    </div>
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle me-2"></i>
                        <strong>Note:</strong> Username and password will be automatically generated and sent to the staff member's email address.
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i>Cancel
                    </button>
                    <button type="submit" class="btn btn-primary" id="submitStaffBtn">
                        <i class="fas fa-user-plus me-1"></i>Add Staff Member
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    function addNewStaff() {
        $('#staffModal').modal('show');
    }
    
    function editStaff(staffId) {
        alert('Edit staff functionality to be implemented for staff: ' + staffId);
    }
    
    function deleteStaff(staffId) {
        if (confirm('Are you sure you want to delete this staff member?')) {
            alert('Delete staff functionality to be implemented for staff: ' + staffId);
        }
    }
    
    // Handle staff form submission
    $('#staffForm').on('submit', function(e) {
        e.preventDefault();
        
        // Clear previous validation
        $('.form-control').removeClass('is-invalid');
        $('.invalid-feedback').text('');
        
        // Get form data
        const formData = {
            firstName: $('#firstName').val().trim(),
            lastName: $('#lastName').val().trim(),
            email: $('#email').val().trim(),
            phoneNumber: $('#phoneNumber').val().trim(),
            role: 'Staff'
        };
        
        // Basic validation
        let isValid = true;
        
        if (!formData.firstName) {
            showValidationError('firstName', 'First name is required');
            isValid = false;
        }
        
        if (!formData.lastName) {
            showValidationError('lastName', 'Last name is required');
            isValid = false;
        }
        
        if (!formData.email) {
            showValidationError('email', 'Email address is required');
            isValid = false;
        } else if (!isValidEmail(formData.email)) {
            showValidationError('email', 'Please enter a valid email address');
            isValid = false;
        }
        
        if (!formData.phoneNumber) {
            showValidationError('phoneNumber', 'Phone number is required');
            isValid = false;
        }
        
        if (!isValid) {
            return;
        }
        
        // Disable submit button and show loading
        const $submitBtn = $('#submitStaffBtn');
        $submitBtn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-1"></i>Adding Staff...');
        
        // Submit form
        $.ajax({
            url: '@Url.Action("AddStaff", "Admin")',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(formData),
            success: function(response) {
                console.log('Staff registration response:', response);
                
                if (response.success) {
                    $('#staffModal').modal('hide');
                    
                    // Show success message
                    showAlert('success', response.message || 'Staff member added successfully! Login credentials have been sent to their email.');
                    
                    // Log the new staff info for debugging
                    if (response.staff) {
                        console.log('New staff added:', response.staff);
                    }
                    
                    // Reload page to show new staff after a brief delay
                    setTimeout(() => {
                        console.log('Reloading page to refresh staff list...');
                        location.reload();
                    }, 2000); // Increased delay to 2 seconds
                } else {
                    console.error('Registration failed:', response.message);
                    showAlert('danger', response.message || 'Failed to add staff member.');
                }
            },
            error: function(xhr) {
                console.error('AJAX error:', xhr);
                console.error('Status:', xhr.status);
                console.error('Response text:', xhr.responseText);
                
                let errorMessage = 'An error occurred while adding the staff member.';
                
                if (xhr.responseJSON && xhr.responseJSON.errors) {
                    // Handle validation errors
                    const errors = xhr.responseJSON.errors;
                    console.log('Validation errors:', errors);
                    for (const field in errors) {
                        const fieldName = field.charAt(0).toLowerCase() + field.slice(1);
                        showValidationError(fieldName, errors[field][0]);
                    }
                } else if (xhr.responseJSON && xhr.responseJSON.message) {
                    errorMessage = xhr.responseJSON.message;
                }
                
                showAlert('danger', errorMessage);
            },
            complete: function() {
                // Re-enable submit button
                $submitBtn.prop('disabled', false).html('<i class="fas fa-user-plus me-1"></i>Add Staff Member');
            }
        });
    });
    
    // Reset form when modal is hidden
    $('#staffModal').on('hidden.bs.modal', function() {
        $('#staffForm')[0].reset();
        $('.form-control').removeClass('is-invalid');
        $('.invalid-feedback').text('');
    });
    
    function showValidationError(fieldName, message) {
        const $field = $('#' + fieldName);
        const $feedback = $field.siblings('.invalid-feedback');
        
        $field.addClass('is-invalid');
        $feedback.text(message);
    }
    
    function isValidEmail(email) {
        const emailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
        return emailRegex.test(email);
    }
    
    function showAlert(type, message) {
        const alertHtml = 
            '<div class="alert alert-' + type + ' alert-dismissible fade show mt-3" role="alert">' +
                message +
                '<button type="button" class="btn-close" data-bs-dismiss="alert"></button>' +
            '</div>';
        
        // Remove existing alerts
        $('.alert').remove();
        
        // Add new alert at the top of main content
        $('main').prepend(alertHtml);
        
        // Auto-dismiss success alerts
        if (type === 'success') {
            setTimeout(() => {
                $('.alert').fadeOut();
            }, 3000);
        }
    }
</script>