@model CustomerRegistrationRequestDTO
@{
    ViewData["Title"] = "Sign Up";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-5">
            <div class="form-container" style="margin: 1.5rem 0; padding: 1.5rem;">
                <div class="form-header text-center mb-3">
                    <div class="icon">
                        <i data-lucide="user-plus"></i>
                    </div>
                    <h3 class="mt-2 mb-2">Create Account</h3>
                </div>

                    <form asp-action="Register" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-2"></div>
                        
                        <div class="row mb-2">
                            <div class="col-md-6">
                                <div class="form-group mb-2">
                                    <label asp-for="FirstName" class="form-label">First Name</label>
                                    <input asp-for="FirstName" class="form-control" placeholder="Enter first name" required autocomplete="given-name" />
                                    <span asp-validation-for="FirstName" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group mb-2">
                                    <label asp-for="LastName" class="form-label">Last Name</label>
                                    <input asp-for="LastName" class="form-control" placeholder="Enter last name" required autocomplete="family-name" />
                                    <span asp-validation-for="LastName" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="form-group mb-2">
                            <label asp-for="Email" class="form-label">Email Address</label>
                            <div class="input-group">
                                <span class="input-group-text"><i data-lucide="mail"></i></span>
                                <input asp-for="Email" type="email" class="form-control" placeholder="Enter email address" required autocomplete="email" />
                            </div>
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-2">
                            <label asp-for="Username" class="form-label">Username</label>
                            <div class="input-group">
                                <span class="input-group-text"><i data-lucide="user"></i></span>
                                <input asp-for="Username" class="form-control" placeholder="Choose a username" required autocomplete="username" />
                            </div>
                            <span asp-validation-for="Username" class="text-danger"></span>
                        </div>

                        <div class="row mb-2">
                            <div class="col-md-6">
                                <div class="form-group mb-2">
                                    <label asp-for="Password" class="form-label">Password</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i data-lucide="lock"></i></span>
                                        <input asp-for="Password" class="form-control" placeholder="Enter password" required autocomplete="new-password" id="passwordInput" pattern="^(?=.*[A-Z])(?=.*\d)(?=.*[^A-Za-z0-9]).{8,}$" title="At least 8 characters, include an uppercase letter, a number, and a symbol" />
                                        <button type="button" class="btn btn-outline-secondary" id="togglePassword" tabindex="-1"><i data-lucide="eye"></i></button>
                                    </div>
                                    <span asp-validation-for="Password" class="text-danger"></span>
                                    <small class="text-muted">Password must be at least 8 characters and include an uppercase letter, a number, and a symbol.</small>
                                    <div class="progress mt-1" style="height: 4px;">
                                        <div id="pwdStrengthBar" class="progress-bar" role="progressbar" style="width: 0%"></div>
                                    </div>
                                    <small id="pwdStrengthText" class="text-muted"></small>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group mb-2">
                                    <label asp-for="ConfirmPassword" class="form-label">Confirm Password</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i data-lucide="lock"></i></span>
                                        <input asp-for="ConfirmPassword" class="form-control" placeholder="Confirm password" required autocomplete="new-password" id="confirmPasswordInput" />
                                        <button type="button" class="btn btn-outline-secondary" id="togglePassword2" tabindex="-1"><i data-lucide="eye"></i></button>
                                    </div>
                                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                                    <small id="pwdMatchText" class="text-muted"></small>
                                </div>
                            </div>
                        </div>

                        <div class="form-check mb-2">
                            <input class="form-check-input" type="checkbox" value="true" id="termsCheck" required>
                            <label class="form-check-label" for="termsCheck">
                                I agree to the Terms and Conditions
                            </label>
                        </div>

                        <div class="d-grid mb-2">
                            <button type="submit" class="btn btn-primary">
                                <i data-lucide="user-plus" class="me-2"></i> Create Account
                            </button>
                        </div>
                    </form>

                    <div class="text-center">
                        <p class="mb-0">Already have an account? 
                            <a asp-action="Login" class="text-decoration-none">Sign in here</a>
                        </p>
                    </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        (function() {
            const pwd = document.getElementById('passwordInput');
            const confirm = document.getElementById('confirmPasswordInput');
            const bar = document.getElementById('pwdStrengthBar');
            const strengthText = document.getElementById('pwdStrengthText');
            const matchText = document.getElementById('pwdMatchText');
            const toggle1 = document.getElementById('togglePassword');
            const toggle2 = document.getElementById('togglePassword2');

            function calcStrength(value) {
                let score = 0;
                if (!value) return 0;
                if (value.length >= 8) score += 25;
                if (/[A-Z]/.test(value)) score += 25;
                if (/[0-9]/.test(value)) score += 25;
                if (/[^A-Za-z0-9]/.test(value)) score += 25;
                return score;
            }

            function updateStrength() {
                const score = calcStrength(pwd.value);
                bar.style.width = score + '%';
                bar.className = 'progress-bar';
                if (score < 50) { bar.classList.add('bg-danger'); strengthText.textContent = 'Weak password'; }
                else if (score < 75) { bar.classList.add('bg-warning'); strengthText.textContent = 'Fair password'; }
                else { bar.classList.add('bg-success'); strengthText.textContent = 'Strong password'; }
            }

            function updateMatch() {
                if (!confirm.value) { matchText.textContent = ''; return; }
                matchText.textContent = (pwd.value === confirm.value) ? 'Passwords match' : 'Passwords do not match';
                matchText.className = (pwd.value === confirm.value) ? 'text-success' : 'text-danger';
            }

            if (pwd) {
                pwd.addEventListener('input', updateStrength);
                pwd.addEventListener('input', updateMatch);
            }
            if (confirm) confirm.addEventListener('input', updateMatch);

            function toggle(el, input) {
                el.addEventListener('click', function() {
                    const isPwd = input.getAttribute('type') === 'password';
                    input.setAttribute('type', isPwd ? 'text' : 'password');
                    this.querySelector('i').setAttribute('data-lucide', isPwd ? 'eye-off' : 'eye');
                    lucide.createIcons();
                });
            }
            if (toggle1 && pwd) toggle(toggle1, pwd);
            if (toggle2 && confirm) toggle(toggle2, confirm);
        })();
    </script>
}